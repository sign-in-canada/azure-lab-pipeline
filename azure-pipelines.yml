# Pipeline to setup Gluu and Couchbase VMs and setup access policies on the existing keyvault
trigger: 
- none
 
pool: 
  vmImage: 'ubuntu-latest'

jobs:
- job: setup_couchbase
  variables:
  - group: NU-couchbase
  - group: common
  
  steps:
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'sic-nulhaq-rg'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(rgName)'
      location: 'Canada Central'
      csmFile: '$(System.DefaultWorkingDirectory)/inuxARMTemplates/template_.json'
      csmParametersFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/parameters.json'
      overrideParameters: '-adminUsername $(adminUsername) -adminPasswordOrKey "$(adminPasswordOrKey)" -dnsLabelPrefix $(vmName) -networkSecurityGroupName $(networkSecurityGroupName) -OSVersion $(OSVersion) -storageName $(storageName) -subnetName $(subnetName) -virtualNetworkName $(virtualNetworkName) -vmName $(vmName) -homeTrafficRule $(homeTrafficRule)'
      deploymentMode: 'Incremental'
      deploymentOutputs: arm_outputs

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        $armOutputObj = '$(arm_outputs)' | convertfrom-json
        $armOutputObj.PSObject.Properties | ForEach-Object {
            $keyname = $_.Name
            $value = $_.Value.value
            ## Creates a standard pipeline variable
            Write-Output "##vso[task.setvariable variable=$keyName;]$value"
            
            ## Creates an output variable
            Write-Output "##vso[task.setvariable variable=$keyName;isOutput=true]$value"
            Write-Host "##vso[task.setvariable variable=$keyName;]$value"
        }  

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'sic-nulhaq-rg'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: 'echo $(sic-pipeline-token) | az devops login --organization https://dev.azure.com/tbs-sct/ && az pipelines variable-group variable update --group-id 278  --name cb_host --value $(pvtIPAddress) --project "Sign in Canada - Operations" --organization https://dev.azure.com/tbs-sct/'
      addSpnToEnvironment: true
      useGlobalConfig: true

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'sic-nulhaq-rg'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: 'sic-common-rg'
      location: 'Canada Central'
      csmFile: '$(System.DefaultWorkingDirectory)/inuxARMTemplates/update_keyvault.json'
      overrideParameters: '-vmName $(vmName) -vmResouceGroupName "$(rgName)"'
      deploymentMode: 'Incremental'

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'sic-nulhaq-rg'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(rgName)'
      location: 'Canada Central'
      csmFile: '$(System.DefaultWorkingDirectory)/inuxARMTemplates/template_.json'
      csmParametersFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/install_extension.json'
      overrideParameters: '-vmName $(vmName) -_artifactsLocation "$(_artifactsLocation)" -commandToExec "$(commandToExec)"'
      deploymentMode: 'Incremental'
      deploymentOutputs: arm_outputs
 
- job: setup_gluu_server 

  variables: 
  - group: NU-gluu
  - group: common
  
  steps:
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'sic-nulhaq-rg'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(rgName)'
      location: 'Canada Central'
      csmFile: '$(System.DefaultWorkingDirectory)/inuxARMTemplates/template_.json'
      csmParametersFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/parameters.json'
      overrideParameters: '-adminUsername $(adminUsername) -adminPasswordOrKey "$(adminPasswordOrKey)" -dnsLabelPrefix $(vmName) -networkSecurityGroupName $(networkSecurityGroupName) -OSVersion $(OSVersion) -storageName $(storageName) -subnetName $(subnetName) -virtualNetworkName $(virtualNetworkName) -vmName $(vmName) -homeTrafficRule $(homeTrafficRule)'
      deploymentMode: 'Incremental'
      deploymentOutputs: arm_outputs

  - task: AzureCLI@2
    inputs:
      azureSubscription: 'sic-nulhaq-rg'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        newCommand="$(commandToExec) $(cb_host)"
        echo $(sic-pipeline-token) | az devops login --organization https://dev.azure.com/tbs-sct/ && az pipelines variable-group variable update --group-id 278  --name commandToExec --value $newCommand --project "Sign in Canada - Operations" --organization https://dev.azure.com/tbs-sct/
      addSpnToEnvironment: true
      useGlobalConfig: true

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'sic-nulhaq-rg'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: 'sic-common-rg'
      location: 'Canada Central'
      csmFile: '$(System.DefaultWorkingDirectory)/inuxARMTemplates/update_keyvault.json'
      overrideParameters: '-vmName $(vmName) -vmResouceGroupName "$(rgName)"'
      deploymentMode: 'Incremental'

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'sic-nulhaq-rg'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(rgName)'
      location: 'Canada Central'
      csmFile: '$(System.DefaultWorkingDirectory)/inuxARMTemplates/template_.json'
      csmParametersFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/install_extension.json'
      overrideParameters: '-vmName $(vmName) -_artifactsLocation "$(_artifactsLocation)" -commandToExec "$(commandToExec)"'
      deploymentMode: 'Incremental'
      deploymentOutputs: arm_outputs
 