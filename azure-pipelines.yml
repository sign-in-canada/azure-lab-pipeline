# Pipeline to setup Gluu and Couchbase VMs and setup access policies on the existing keyvault
trigger: 
- none
 
pool: 
  vmImage: 'ubuntu-latest'

jobs:
- job: setup_couchbase
  variables:
  - group: NU-couchbase
  - group: common
  
  steps:
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'Sign in Canada Service Connection'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(rgName)'
      location: 'Canada Central'
      templateLocation: 'Linked artifact'
      csmFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/template.json'
      csmParametersFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/parameters.json'
      overrideParameters: '-adminUsername $(adminUsername) -adminPasswordOrKey "$(adminPasswordOrKey)" -dnsLabelPrefix $(vmName) -networkSecurityGroupName $(networkSecurityGroupName) -OSVersion $(OSVersion) -storageName $(storageName) -subnetName $(subnetName) -virtualNetworkName $(virtualNetworkName) -vmName $(vmName) -homeTrafficRule $(homeTrafficRule)'
      deploymentMode: 'Incremental'
      deploymentOutputs: 'arm_outputs'
    displayName: ARM Coucbase VM

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        $armOutputObj = '$(arm_outputs)' | convertfrom-json
        $armOutputObj.PSObject.Properties | ForEach-Object {
            $keyname = $_.Name
            $value = $_.Value.value
            ## Creates a standard pipeline variable
            Write-Output "##vso[task.setvariable variable=$keyName;]$value"
            
            ## Creates an output variable
            Write-Output "##vso[task.setvariable variable=$keyName;isOutput=true]$value"
            Write-Host "##vso[task.setvariable variable=$keyName;]$value"
        }
    displayName: Parse ARM Output  

  - bash: |
     curl -fL -XPUT -H "Authorization:Bearer $(System.AccessToken)" -H "Content-Type:application/json" \
     -d '{
       "id": "$(common-var-group-id)",
       "type": "Vsts",
       "name": "common",
       "variables": {
         "common-var-group-id": {
           "isSecret": false,
           "value": "287"
         },
         "install-gluu": {
           "isSecret": false,
           "value": "sh install_gluu.sh $(pvtIPAddress)"
         }
       }
     }' \
     $(System.TeamFoundationCollectionUri)/$(System.TeamProject)/_apis/distributedtask/variablegroups/$(common-var-group-id)?api-version=5.0-preview.1
    displayName: Update CB IP address

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'Sign in Canada Service Connection'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: 'sic-common-rg'
      location: 'Canada Central'
      templateLocation: 'Linked artifact'
      csmFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/update_keyvault.json'
      overrideParameters: '-vmName $(vmName) -vmResouceGroupName "$(rgName)"'
      deploymentMode: 'Incremental'
    displayName: Keyvault AccessPolicy

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'Sign in Canada Service Connection'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(rgName)'
      location: 'Canada Central'
      templateLocation: 'Linked artifact'
      csmFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/install_extension.json'
      overrideParameters: '-vmName $(vmName) -_artifactsLocation "$(_artifactsLocation)" -commandToExec "$(commandToExec)"'
      deploymentMode: 'Incremental'
      deploymentOutputs: 'arm_outputs'
    displayName: Install Couchbase Script
 
- job: setup_gluu_server 
  dependsOn: setup_couchbase
  variables: 
  - group: common  
  - group: NU-gluu
  
  steps:
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'Sign in Canada Service Connection'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(rgName)'
      location: 'Canada Central'
      templateLocation: 'Linked artifact'
      csmFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/template.json'
      csmParametersFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/parameters.json'
      overrideParameters: '-adminUsername $(adminUsername) -adminPasswordOrKey "$(adminPasswordOrKey)" -dnsLabelPrefix $(vmName) -networkSecurityGroupName $(networkSecurityGroupName) -OSVersion $(OSVersion) -storageName $(storageName) -subnetName $(subnetName) -virtualNetworkName $(virtualNetworkName) -vmName $(vmName) -homeTrafficRule $(homeTrafficRule)'
      deploymentMode: 'Incremental'
      deploymentOutputs: 'arm_outputs'
    displayName: ARM Gluu VM

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'Sign in Canada Service Connection'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: 'sic-common-rg'
      location: 'Canada Central'
      templateLocation: 'Linked artifact'
      csmFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/update_keyvault.json'
      overrideParameters: '-vmName $(vmName) -vmResouceGroupName "$(rgName)"'
      deploymentMode: 'Incremental'
    displayName: Keyvault AccessPolicy
    
  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'Sign in Canada Service Connection'
      subscriptionId: '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(rgName)'
      location: 'Canada Central'
      templateLocation: 'Linked artifact'
      csmFile: '$(System.DefaultWorkingDirectory)/linuxARMTemplates/install_extension.json'
      overrideParameters: '-vmName $(vmName) -_artifactsLocation "$(_artifactsLocation)" -commandToExec "$(install-gluu)"'
      deploymentMode: 'Incremental'
      deploymentOutputs: 'arm_outputs'
    displayName: Install Gluu Script
 
  - task: AzureCLI@2
    inputs:
     azureSubscription: 'Sign in Canada Service Connection'
     scriptType: 'bash'
     scriptLocation: 'inlineScript'
     inlineScript: |
        /usr/bin/az account show
        /usr/bin/az account set --subscription '487c0957-86dc-470c-b6f5-5b7d64eb39a2'
        if az network dns record-set cname list -g sic-networking-rg -z id.alpha.canada.ca | grep $(vmName) ; then
          internaldnsname=$(vmName).canadacentral.cloudapp.azure.com
          az network dns record-set cname set-record -g sic-networking-rg -z id.alpha.canada.ca -n $(vmName) -c $internaldnsname
        else 
          pubIP=$(az vm show -g $(rgName) -n $(vmName) -d --query publicIps --out tsv)
          az network dns record-set a add-record -g 'sic-networking-rg' -z id.alpha.canada.ca -n $vmName -a $pubIP
        fi
    displayName: Update DNS recordset
